@using X.PagedList;
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common;
@model IPagedList<MinhaCarteira.Cliente.Recursos.Models.ContaBancariaViewModel>

@{
    await Html.RenderPartialAsync("_PartialAlertas");
    ViewData["Title"] = "Contas Bancárias";
    ViewData["Icone"] = "<i class='fa fa-credit-card fa-lg text-primary'></i>";
    ViewData["LinkNovo"] = Url.Action("Criar");
}

<div class="accordion mb-3">
    <div class="accordion-item">
        <h2 class="accordion-header" id="headingOne">
            <button class="accordion-button collapsed fs-4" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                Filtros
            </button>
        </h2>
        <div id="collapseOne" class="accordion-collapse collapse" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
            <div class="accordion-body p-0">
                <form asp-action="Index" method="get" class="p-3">
                    <div class="row mb-2">
                        <div class="col-sm-3">
                            <label class="form-label">Campo</label>
                            <select class="form-select">
                                <option>Data</option>
                            </select>
                        </div>

                        <div class="col-sm-3">
                            <label class="form-label">Operador</label>
                            <select class="form-select">
                                <option>Data</option>
                            </select>
                        </div>

                        <div class="col-sm-6">
                            <label class="form-label">Valor</label>
                            <input id="txtCategoria" class="form-control" />
                            <span class="text-danger"></span>
                        </div>
                    </div>

                    <div class="row justify-content-end pe-2">
                        <a class="btn btn-success col-5 col-sm-2 col-lg-1 me-2" asp-action="Criar">
                            <i class="fa fa-add"></i>
                            <span>Criar</span>
                        </a>

                        <button class="btn btn-primary col-5 col-sm-2 col-lg-1">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                                <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z"></path>
                            </svg>
                            <span>Buscar</span>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="table-responsive-sm" id="no-more-tables">
    <table class="table table-hover">
        <thead>
            <tr>
                <th class="text-end">
                    Saldo
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.FirstOrDefault().Nome)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.FirstOrDefault().Agencia)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.FirstOrDefault().Conta)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.FirstOrDefault().InstituicaoFinanceiraId)
                </th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody>
            @if ((ViewBag?.RetornoApi == null || ViewBag?.RetornoApi.BemSucedido) && (Model == null || !Model.Any()))
            {
                <tr class="align-middle">
                    <td colspan="10" class="p-0 m-0">
                        <div class="p-5 mb-4 bg-light rounded-3">
                            <div class="container-fluid">
                                <h1 class="display-5 fw-bold">Conta Bancária</h1>
                                <p class="col-md-12 fs-4">Você não possui nenhuma conta bancária a ser listada por aqui.</p>
                                <p class="col-md-12 fs-6">Clique no botão abaixo para cadastrar um novo item.</p>

                                <a class="btn btn-lg btn-primary" asp-action="Criar" role="button">
                                    Cadastrar
                                </a>
                            </div>
                        </div>
                    </td>
                </tr>
            }
            else
            {
                @foreach (var item in Model)
                {
                    var corFont = item.ValorSaldoAtual > 0
                    ? "text-primary"
                    : item.ValorSaldoAtual < 0
                    ? "text-danger"
                    : "text-secondary";

                    <tr class="align-middle">
                        <td data-title="Saldo" class="text-end fw-bold @corFont">
                            @Html.DisplayFor(modelItem => item.ValorSaldoAtual)
                        </td>
                        <td data-title="@Html.DisplayNameFor(m => m.FirstOrDefault().Nome)">
                            @Html.DisplayFor(modelItem => item.Nome)
                        </td>
                        <td data-title="@Html.DisplayNameFor(m => m.FirstOrDefault().Agencia)">
                            @if (!string.IsNullOrWhiteSpace(item.Agencia))
                            {
                                @Html.DisplayFor(modelItem => item.Agencia)
                            }
                            else
                            {
                                <span>&nbsp;</span>
                            }
                        </td>
                        <td data-title="@Html.DisplayNameFor(m => m.FirstOrDefault().Conta)">
                            @if (!string.IsNullOrWhiteSpace(item.Conta))
                            {
                                @Html.DisplayFor(modelItem => item.Conta)
                            }
                            else
                            {
                                <span>&nbsp;</span>
                            }
                        </td>
                        <td data-title="@Html.DisplayNameFor(m => m.FirstOrDefault().InstituicaoFinanceira.Nome)">
                            @Html.DisplayFor(modelItem => item.InstituicaoFinanceira.Nome)
                        </td>
                        <td data-title="Ações">
                            <a title="Alterar" class="btn btn-outline-primary p-0 pt-1 pb-1" style="width: 40px;" asp-action="Alterar" asp-route-id="@item.Id">
                                <i class="fa-solid fa-lg fa-pen-to-square"></i>
                            </a>
                            <a title="Detalhes" class="btn btn-outline-success p-0 pt-1 pb-1" style="width: 40px;" asp-action="Detalhes" asp-route-id="@item.Id">
                                <i class="fa-solid fa-lg fa-info-circle"></i>
                            </a>
                            <a title="Remover" class="btn btn-outline-danger p-0 pt-1 pb-1" style="width: 40px;" asp-action="Deletar" asp-route-id="@item.Id">
                                <i class="fa-solid fa-lg fa-trash-can"></i>
                            </a>
                            <a title="Atualizar saldo da conta" class="btn btn-outline-primary p-0 pt-1 pb-1" style="width: 40px;" asp-action="AtualizarSaldoConta" asp-route-id="@item.Id">
                                <i class="fa-solid fa-lg fa-refresh"></i>
                            </a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

    @if (Model != null && Model.Any())
    {
        <div style="float: right">
            Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount
        </div>

        @Html.PagedListPager(
                 Model,
                 page => Url.Action("Index", new { page }),
                 new PagedListRenderOptions
                 {
                     PageClasses = new string[] { "page-link" },
                     UlElementClasses = new string[] { "pagination justify-content-center" },
                     LiElementClasses = new string[] { "page-item" },
                     DisplayItemSliceAndTotal = false,
                     DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                     DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                     DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                 })
    }
</div>