@using MinhaCarteira.Cliente.Recursos.Models.Base
@using MinhaCarteira.Cliente.Recursos.Models.Enum;
@using X.PagedList;
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common;
@using MinhaCarteira.Comum.Definicao.Modelo;
@model ListaBaseViewModel<MinhaCarteira.Cliente.Recursos.Models.AgendamentoItemViewModel>

@{
    await Html.RenderPartialAsync("_PartialAlertas");
    ViewData["Title"] = "Agendamento";
    ViewData["Icone"] = "<i class='fa fa-calendar-day fa-lg text-primary'></i>";
    ViewData["LinkNovo"] = Url.Action("Criar");
}
@section Scripts{
    <script src="~/js/views/paginacao.js" asp-append-version="true"></script>
}

<div class="accordion mb-3">
    <div class="accordion-item">
        <h2 class="accordion-header" id="headingOne">
            <button class="accordion-button collapsed fs-5" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                Filtros
            </button>
        </h2>
        <div id="collapseOne" class="accordion-collapse collapse" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
            <div class="accordion-body p-0">
                <form asp-action="Index" method="get" class="p-3" id="formBusca">
                    <input id="page" name="page" type="hidden" />

                    <div class="row mb-2">
                        <div class="col-sm-3">
                            <label asp-for="OpcaoAtual.NomePropriedade" class="form-label"></label>
                            <input asp-for="OpcaoAtual.NomePropriedade" class="form-control" />
                            <span asp-validation-for="OpcaoAtual.NomePropriedade" class="text-danger"></span>
                        </div>

                        <div class="col-sm-3 col-lg-2">
                            <label asp-for="OpcaoAtual.Operador" class="form-label"></label>
                            <select asp-for="OpcaoAtual.Operador" class="form-select">
                                @foreach (var c in Enum.GetValues(typeof(TipoOperadorBusca)).Cast<TipoOperadorBusca>())
                                {
                                    <option value="@c">@c</option>
                                }
                            </select>
                            <span asp-validation-for="OpcaoAtual.Operador" class="text-danger"></span>
                        </div>

                        <div class="col-sm-6 col-lg-7">
                            <label asp-for="OpcaoAtual.Valor" class="form-label"></label>
                            <input asp-for="OpcaoAtual.Valor" class="form-control" />
                            <span asp-validation-for="OpcaoAtual.Valor" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="row justify-content-end pe-2">
                        <button class="btn btn-primary col-5 col-sm-2 col-lg-1">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                                <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z"></path>
                            </svg>
                            <span>Buscar</span>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="table-responsive" id="no-more-tables">
    <table class="table table-hover">
        <thead>
            <tr>
                <th style="width: 50px;"></th>
                <th style="width: 80px;">
                    @Html.DisplayNameFor(m => m.Itens.FirstOrDefault().Data)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.Itens.FirstOrDefault().Agendamento.Descricao)
                </th>
                <th class="text-end" style="width: 140px;">
                    @Html.DisplayNameFor(m => m.Itens.FirstOrDefault().Valor)
                </th>
                <th style="width: 180px;">
                    @Html.DisplayNameFor(m => m.Itens.FirstOrDefault().Agendamento.Categoria.Nome)
                </th>
                <th style="width: 100px;">
                    @Html.DisplayNameFor(m => m.Itens.FirstOrDefault().Agendamento.NomeCentroClassificacao)
                </th>
                <th style="width: 130px;">Ações</th>
            </tr>
        </thead>
        <tbody>
            @if ((ViewBag?.RetornoApi == null || ViewBag?.RetornoApi.BemSucedido) && (Model == null || !Model.Itens.Any()))
            {
                <tr class="align-middle">
                    <td colspan="10" class="p-0 m-0">
                        <div class="p-5 mb-4 bg-light rounded-3">
                            <div class="container-fluid">
                                <h1 class="display-5 fw-bold">Agendamento</h1>
                                <p class="col-md-12 fs-4">Você não possui nenhum agendamento a ser listado por aqui.</p>
                                <p class="col-md-12 fs-6">Clique no botão abaixo para cadastrar um novo item.</p>

                                <a class="btn btn-lg btn-primary" asp-action="Criar" role="button">
                                    Cadastrar
                                </a>
                            </div>
                        </div>
                    </td>
                </tr>
            }
            else
            {
                @foreach (var item in Model.Itens)
                {
                    var classLinha = item.StatusParcela switch
                    {
                        StatusParcela.Paga => "table-info",
                        StatusParcela.Vencida => "table-warning",
                        StatusParcela.Conciliada => "table-active",
                        _ => ""
                    };
                    var corFont = item.Agendamento.Tipo == MinhaCarteira.Comum.Definicao.Modelo.TipoMovimento.Credito
                    ? "text-primary"
                    : "text-danger";

                    <tr class="@classLinha align-middle">
                        <td data-title="Categoria">
                            <img src="data:@item.Agendamento.Categoria.MimeType;base64,@item.Agendamento.Categoria.IconeCategoria"
                                 title="@item.Agendamento.Categoria.Nome"
                                 height="42" width="42"
                                 alt="@item.Agendamento.Categoria.Nome"
                                 asp-append-version="true" />
                        </td>
                        <td data-title="@Html.DisplayNameFor(model => item.Data)">
                            @Html.DisplayFor(modelItem => item.DataPagamento)
                        </td>
                        <td data-title="@Html.DisplayNameFor(model => item.Agendamento.Descricao)">
                            @Html.DisplayFor(modelItem => item.Agendamento.Descricao)
                        </td>
                        <td data-title="@Html.DisplayNameFor(model => item.ValorPago)" class="text-end fw-bold @corFont">
                            @Html.DisplayFor(modelItem => item.ValorPago)
                        </td>
                        <td data-title="@Html.DisplayNameFor(model => item.NomePessoa)">
                            @Html.DisplayFor(modelItem => item.NomePessoa)
                        </td>
                        <td data-title="@Html.DisplayNameFor(model => item.Agendamento.NomeCentroClassificacao)">
                            @Html.DisplayFor(modelItem => item.Agendamento.NomeCentroClassificacao)
                        </td>
                        <td data-title="Ação">
                            @if (item.StatusParcela == StatusParcela.Paga)
                            {
                                <a class="btn btn-success" asp-action="ConciliarParcela" asp-route-id="@item.Id">
                                    <i class="fa fa-link"></i> Conciliar
                                </a>
                            }
                            else if (item.StatusParcela != StatusParcela.Conciliada)
                            {
                                <a class="btn btn-primary" asp-action="PagarParcela" asp-route-id="@item.Id">
                                    <i class="fa fa-check-circle"></i> Pagar
                                </a>
                            }
                            else
                            {
                                <span>&nbsp;</span>
                            }
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@if (Model != null && Model.Itens.Any())
{
    <div class="row m-0 table-responsive">
        <div class="col-sm-6">
            @Html.PagedListPager(
                Model.Itens,
                page => Url.Action("Index", new { page }),
                new PagedListRenderOptions
                {
                    PageClasses = new string[] { "page-link" },
                    UlElementClasses = new string[] { "pagination justify-content-start" },
                    LiElementClasses = new string[] { "page-item" },
                    DisplayItemSliceAndTotal = false,
                    DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                    DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                    DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                    MaximumPageNumbersToDisplay = 4
                })
        </div>

        <div class="col-sm-6 text-end">
            Página @(Model.Itens.PageCount < Model.Itens.PageNumber ? 0 : Model.Itens.PageNumber) de @Model.Itens.PageCount
        </div>
    </div>
}
