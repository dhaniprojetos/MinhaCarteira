@using MinhaCarteira.Cliente.Recursos.Models.Enum;
@using X.PagedList;
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common;
@model IPagedList<MinhaCarteira.Cliente.Recursos.Models.AgendamentoItemViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
@{
    await Html.RenderPartialAsync("_PartialAlertas");
}

<p>
    <a asp-action="Criar">Create New</a>
</p>

<div class="table-responsive-sm" id="no-more-tables">
    <table class="table table-hover">
        <thead>
            <tr>
                <th style="width: 50px;"></th>
                <th style="width: 80px;">
                    @Html.DisplayNameFor(m => m.First().Data)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.First().Agendamento.Descricao)
                </th>
                <th class="text-end" style="width: 140px;">
                    @Html.DisplayNameFor(m => m.First().Valor)
                </th>
                <th style="width: 180px;">
                    @Html.DisplayNameFor(m => m.First().Agendamento.Categoria.Nome)
                </th>
                <th style="width: 100px;">
                    @Html.DisplayNameFor(m => m.First().Agendamento.NomeCentroClassificacao)
                </th>
                <th style="width: 130px;">Ações</th>
            </tr>
        </thead>
        <tbody>
            @if (Model == null || !Model.Any())
            {
                <tr class="align-middle">
                    <td colspan="10" class="p-0 m-0">
                        <div class="p-5 mb-4 bg-light rounded-3">
                            <div class="container-fluid">
                                <h1 class="display-5 fw-bold">Agendamento</h1>
                                <p class="col-md-12 fs-4">Você não possui nenhum agendamento a ser listado por aqui.</p>
                                <p class="col-md-12 fs-6">Clique no botão abaixo para cadastrar um novo item.</p>

                                <a class="btn btn-lg btn-primary" asp-action="Criar" role="button">
                                    Cadastrar
                                </a>
                            </div>
                        </div>
                    </td>
                </tr>
            }
            else
            {
                @foreach (var item in Model)
                {
                    var classLinha = item.StatusParcela switch
                    {
                        StatusParcela.Paga => "table-info",
                        StatusParcela.Vencida => "table-warning",
                        StatusParcela.Conciliada => "table-active",
                        _ => ""
                    };
                    var corFont = item.Agendamento.Tipo == MinhaCarteira.Comum.Definicao.Modelo.TipoMovimento.Credito
                    ? "text-primary"
                    : "text-danger";

                    <tr class="@classLinha align-middle">
                        <td data-title="Categoria">
                            <img src="data:@item.Agendamento.Categoria.MimeType;base64,@item.Agendamento.Categoria.IconeCategoria"
                                 title="@item.Agendamento.Categoria.Nome"
                                 height="42" width="42"
                                 alt="@item.Agendamento.Categoria.Nome"
                                 asp-append-version="true" />
                        </td>
                        <td data-title="@Html.DisplayNameFor(model => item.Data)">
                            @Html.DisplayFor(modelItem => item.DataPagamento)
                        </td>
                        <td data-title="@Html.DisplayNameFor(model => item.Agendamento.Descricao)">
                            @Html.DisplayFor(modelItem => item.Agendamento.Descricao)
                        </td>
                        <td data-title="@Html.DisplayNameFor(model => item.ValorPago)" class="text-end fw-bold @corFont">
                            @Html.DisplayFor(modelItem => item.ValorPago)
                        </td>
                        <td data-title="@Html.DisplayNameFor(model => item.NomePessoa)">
                            @Html.DisplayFor(modelItem => item.NomePessoa)
                        </td>
                        <td data-title="@Html.DisplayNameFor(model => item.Agendamento.NomeCentroClassificacao)">
                            @Html.DisplayFor(modelItem => item.Agendamento.NomeCentroClassificacao)
                        </td>
                        <td data-title="Ação">
                            @if (item.StatusParcela == StatusParcela.Paga)
                            {
                                <a class="btn btn-success" asp-action="ConciliarParcela" asp-route-id="@item.Id">
                                    <i class="fa fa-link"></i> Conciliar
                                </a>
                            }
                            else if (item.StatusParcela != StatusParcela.Conciliada)
                            {
                                <a class="btn btn-primary" asp-action="PagarParcela" asp-route-id="@item.Id">
                                    <i class="fa fa-check-circle"></i> Pagar
                                </a>
                            }
                            else
                            {
                                <span>&nbsp;</span>
                            }
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

    @if (Model != null && Model.Any())
    {
        <div style="float: right">
            Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount
        </div>

        @Html.PagedListPager(
                 Model,
                 page => Url.Action("Index", new { page }),
                 new PagedListRenderOptions
                 {
                     PageClasses = new string[] { "page-link" },
                     UlElementClasses = new string[] { "pagination justify-content-center" },
                     LiElementClasses = new string[] { "page-item" },
                     DisplayItemSliceAndTotal = false,
                     DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                     DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                     DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                 })
    }
</div>
