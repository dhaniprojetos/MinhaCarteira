@using X.PagedList;
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common;
@model IPagedList<MinhaCarteira.Cliente.Recursos.Models.CategoriaViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
@{await Html.RenderPartialAsync("_PartialAlertas");}

<p>
    <a asp-action="Criar">Create New</a>
</p>

<div class="table-responsive-sm">
    <table class="table table-hover">
        <thead>
            <tr>
                <th></th>
                <th>
                    @Html.DisplayNameFor(m => m.FirstOrDefault().Nome)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.FirstOrDefault().CategoriaPai)
                </th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody>
            @if (Model == null || !Model.Any())
            {
                <tr class="align-middle">
                    <td colspan="10" class="p-0 m-0">
                        <div class="p-5 mb-4 bg-light rounded-3">
                            <div class="container-fluid">
                                <h1 class="display-5 fw-bold">Categoria</h1>
                                <p class="col-md-12 fs-4">Você não possui nenhuma categoria a ser listada por aqui.</p>
                                <p class="col-md-12 fs-6">Clique no botão abaixo para cadastrar um novo item.</p>

                                <a class="btn btn-lg btn-primary" asp-action="Criar" role="button">
                                    Cadastrar
                                </a>
                            </div>
                        </div>
                    </td>
                </tr>
            }
            else
            {
                @foreach (var item in Model)
                {
                    <tr class="align-middle">
                        <td class="p-0 ps-2" style="width: 50px;">
                            <img src="data:@item.MimeType;base64,@item.IconeCategoria"
                                 height="42" width="42"
                                 asp-append-version="true" />
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Nome)
                        </td>
                        <td class="text-start">
                            @Html.DisplayFor(modelItem => item.NomeCategoriaPai)
                        </td>
                        <td style="width: 160px;">
                            <a title="Alterar" class="btn btn-outline-primary p-0 pt-1 pb-1" style="width: 40px;" asp-action="Alterar" asp-route-id="@item.Id">
                                <i class="fa-solid fa-lg fa-pen-to-square"></i>
                            </a>
                            <a title="Detalhes" class="btn btn-outline-success p-0 pt-1 pb-1" style="width: 40px;" asp-action="Detalhes" asp-route-id="@item.Id">
                                <i class="fa-solid fa-lg fa-info-circle"></i>
                            </a>
                            <a title="Remover" class="btn btn-outline-danger p-0 pt-1 pb-1" style="width: 40px;" asp-action="Deletar" asp-route-id="@item.Id">
                                <i class="fa-solid fa-lg fa-trash-can"></i>
                            </a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

    @if (Model != null && Model.Any())
    {
        <div style="float: right">
            Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount
        </div>

        @Html.PagedListPager(
            Model,
            page => Url.Action("Index", new { page }),
                new PagedListRenderOptions
                {
                    PageClasses = new string[] { "page-link" },
                    UlElementClasses = new string[] { "pagination justify-content-center" },
                    LiElementClasses = new string[] { "page-item" },
                    DisplayItemSliceAndTotal = false,
                    DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                    DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                    DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded
                })
    }
</div>